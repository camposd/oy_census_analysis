erase_y_axis
sum(1:260)
sum(1:26)
ls()
ls()
install.packages('ipumsr')
lsl()
ls()
ls()
ls()
load_data <-
list(
download_pums_data = function(){
# api_key =
#   get_api_key()
tidycensus::get_pums(
# key = api_key,
variables = get_pums_variables(),
state = 'IL',
recode = TRUE,
year = 2018,
survey = 'acs1',
rep_weights = 'person'
)
},
load_pums_data = function(){
file_path =
here::here('raw_data',
'il_pums_data.csv')
file =
readr::read_csv(file_path)
},
load_ipums_data = function(){
file_path =
here::here('raw_data',
'il_ipums.csv')
file =
readr::read_csv(file_path)
},
load_PUMA_crosswalk = function(){
file_path =
here::here(
'raw_data',
'MSA2013_PUMA2010_crosswalk.csv')
file =
readr::read_csv(file_path)
},
load_clean_pums = function(){
file_path =
here::here(
'clean_data',
'il_pums_data_clean.csv'
)
file =
readr::read_csv(file_path)
},
load_population_estimates = function(){
file_path =
here::here(
'analysis_data',
'oy_population_estimates.RDS'
)
file =
readr::read_rds(file_path)
}
)
ls()
library(tidyverse)
ipums <- load_data$load_ipums_data()
names(ipums)
ipums %>%
head()
ipums %>%
head()
ipums %>%
dim()
ipums %>%
count(SERIAL)
ipums %>%
count(SERIAL, sort = TRUE)
ipums %>% head() %>% View()
ipums %>%
count(NCHILD)
names(ipums)
ipums$EMPSTAT %>% names()
ipums$EMPSTAT %>% unique()
map(ipums, class)
names(ipums)
ipums$SCHOOL
ipums$SCHOOL %>% unique()
identify_oy_ipums <- fuction(ipums_data){
identify_employment_status <- function(empstat){
# EMPSTAT on IPUMS
# 2 = unemployed
# 3 = not in labor force
# https://usa.ipums.org/usa-action/variables/EMPSTAT#description_section
out <-
if_else(empstat %in% c(2,3),
TRUE,
FALSE)
return(out)
}
identify_school_enrollment <- function(school){
# SCHOOL on ipums
# 1 = no, not in school
# https://usa.ipums.org/usa-action/variables/SCHOOL#codes_section
out <-
if_else(school == 1,
TRUE,
FALSE)
return(out)
}
identify_youth <- function(age){
# AGE
# interested in age range between 16 and 24
# https://usa.ipums.org/usa-action/variables/AGE#description_section
out <- school >= 16 & school <= 24
return(out)
}
ipums_data <-
ipums_data %>%
mutate(
youth_flag = identify_youth(AGE),
school_flag = identify_school_enrollment(SCHOOL),
employment_flag = identify_employment_status(EMPSTAT),
disconnection_flag = school_flag & employment_flag,
oy_flag =
if_else(youth_flag & disconnection_flag,
"opp_youth",
if_else(
youth_flag & !disconnection_flag,
"connected_youth",
"everyone_else"
))
)
}
identify_oy_ipums <- fuction(ipums_data){
identify_employment_status <- function(empstat){
# EMPSTAT on IPUMS
# 2 = unemployed
# 3 = not in labor force
# https://usa.ipums.org/usa-action/variables/EMPSTAT#description_section
out <-
if_else(empstat %in% c(2,3),
TRUE,
FALSE)
return(out)
}
identify_school_enrollment <- function(school){
# SCHOOL on ipums
# 1 = no, not in school
# https://usa.ipums.org/usa-action/variables/SCHOOL#codes_section
out <-
if_else(school == 1,
TRUE,
FALSE)
return(out)
}
identify_youth <- function(age){
# AGE
# interested in age range between 16 and 24
# https://usa.ipums.org/usa-action/variables/AGE#description_section
out <- school >= 16 & school <= 24
return(out)
}
ipums_data <-
ipums_data %>%
mutate(
youth_flag = identify_youth(AGE),
school_flag = identify_school_enrollment(SCHOOL),
employment_flag = identify_employment_status(EMPSTAT),
disconnection_flag = school_flag & employment_flag,
oy_flag =
if_else(youth_flag & disconnection_flag,
"opp_youth",
if_else(
youth_flag & !disconnection_flag,
"connected_youth",
"everyone_else"
)))
return(ipums_data)
}
ls()
identify_oy_ipums <- function(ipums_data){
identify_employment_status <- function(empstat){
# EMPSTAT on IPUMS
# 2 = unemployed
# 3 = not in labor force
# https://usa.ipums.org/usa-action/variables/EMPSTAT#description_section
out <-
if_else(empstat %in% c(2,3),
TRUE,
FALSE)
return(out)
}
identify_school_enrollment <- function(school){
# SCHOOL on ipums
# 1 = no, not in school
# https://usa.ipums.org/usa-action/variables/SCHOOL#codes_section
out <-
if_else(school == 1,
TRUE,
FALSE)
return(out)
}
identify_youth <- function(age){
# AGE
# interested in age range between 16 and 24
# https://usa.ipums.org/usa-action/variables/AGE#description_section
out <- school >= 16 & school <= 24
return(out)
}
ipums_data <-
ipums_data %>%
mutate(
youth_flag = identify_youth(AGE),
school_flag = identify_school_enrollment(SCHOOL),
employment_flag = identify_employment_status(EMPSTAT),
disconnection_flag = school_flag & employment_flag,
oy_flag =
if_else(youth_flag & disconnection_flag,
"opp_youth",
if_else(
youth_flag & !disconnection_flag,
"connected_youth",
"everyone_else"
)))
return(ipums_data)
}
ls()
ipums <-
identify_oy_ipums(ipums_data = ipums)
names(IPUMS)
names(ipums)
identify_oy_ipums <- function(ipums_data){
identify_employment_status <- function(empstat){
# EMPSTAT on IPUMS
# 2 = unemployed
# 3 = not in labor force
# https://usa.ipums.org/usa-action/variables/EMPSTAT#description_section
out <-
if_else(empstat %in% c(2,3),
TRUE,
FALSE)
return(out)
}
identify_school_enrollment <- function(school){
# SCHOOL on ipums
# 1 = no, not in school
# https://usa.ipums.org/usa-action/variables/SCHOOL#codes_section
out <-
if_else(school == 1,
TRUE,
FALSE)
return(out)
}
identify_youth <- function(age){
# AGE
# interested in age range between 16 and 24
# https://usa.ipums.org/usa-action/variables/AGE#description_section
out <- school >= 16 & school <= 24
return(out)
}
ipums_data <-
ipums_data %>%
mutate(
youth_flag = identify_youth(age = AGE),
school_flag = identify_school_enrollment(school = SCHOOL),
employment_flag = identify_employment_status(empstat = EMPSTAT),
disconnection_flag = school_flag & employment_flag,
oy_flag =
if_else(youth_flag & disconnection_flag,
"opp_youth",
if_else(
youth_flag & !disconnection_flag,
"connected_youth",
"everyone_else"
)))
return(ipums_data)
}
ipums <-
identify_oy_ipums(ipums_data = ipums)
identify_oy_ipums <- function(ipums_data){
identify_employment_status <- function(empstat){
# EMPSTAT on IPUMS
# 2 = unemployed
# 3 = not in labor force
# https://usa.ipums.org/usa-action/variables/EMPSTAT#description_section
out <-
if_else(empstat %in% c(2,3),
TRUE,
FALSE)
return(out)
}
identify_school_enrollment <- function(school){
# SCHOOL on ipums
# 1 = no, not in school
# https://usa.ipums.org/usa-action/variables/SCHOOL#codes_section
out <-
if_else(school == 1,
TRUE,
FALSE)
return(out)
}
identify_youth <- function(age){
# AGE
# interested in age range between 16 and 24
# https://usa.ipums.org/usa-action/variables/AGE#description_section
out <- age >= 16 & age <= 24
return(out)
}
ipums_data <-
ipums_data %>%
mutate(
youth_flag = identify_youth(age = AGE),
school_flag = identify_school_enrollment(school = SCHOOL),
employment_flag = identify_employment_status(empstat = EMPSTAT),
disconnection_flag = school_flag & employment_flag,
oy_flag =
if_else(youth_flag & disconnection_flag,
"opp_youth",
if_else(
youth_flag & !disconnection_flag,
"connected_youth",
"everyone_else"
)))
return(ipums_data)
}
ipums <-
identify_oy_ipums(ipums_data = ipums)
ipums$oy_flag %>% unique()
ipums %>% count(oy_flag)
ipums %>% count(oy_flag, wt = PERWT)
ipums %>%
distinct(oy_flag, AGE)
ipums %>%
group_by(oy_flag) %>%
summarize(
max_age = max(AGE, na.rm = TRUE),
min_age = min(AGE, na.rm = TRUE)
)
source('~/.active-rstudio-document', echo=TRUE)
ipums %>%
filter(oy_flag == "everyone_else",
AGE == 16)
ipums %>%
filter(oy_flag == "everyone_else",
AGE >= 16, AGE <= 24)
ipums %>%
filter(oy_flag == "everyone_else",
AGE >= 16 | AGE <= 24)
ipums %>%
filter(oy_flag == "everyone_else",
AGE <= 24)
ipums %>%
filter(oy_flag == "everyone_else",
AGE <= 24) %>%
pull(oy_flag) %>% unique()
ipums %>%
filter(oy_flag == "everyone_else") %>%
pull(AGE) %>%
unique() %>%
sort()
ipums %>%
filter(oy_flag == "everyone_else",
AGE <= 24) %>%
pull(oy_flag) %>% unique()
ipums %>%
filter(oy_flag == "everyone_else") %>%
pull(AGE) %>%
unique() %>%
sort()
ipums %>%
filter(oy_flag == "everyone_else" & AGE <= 24) %>%
pull(AGE) %>%
unique() %>%
sort()
install.packages('survey')
ls()
ipums <- load_data$load_ipums_data()
ipums <- load_data$load_ipums_data()
names(ipums)
?srvyr::as_survey_design()
?survey::svrepdesign()
?srvyr::as_survey_rep()
names(ipums)
as_survey
?as_survey()
tidycensus::to_survey
svy <- as_survey(ipums,
weight = PERWT,
repweights = matches("REPWTP[0-9]+"),
type = "Fay",
rho = 0.5,
mse = TRUE)
library(srvyr)
svy <- as_survey(ipums,
weight = PERWT,
repweights = matches("REPWTP[0-9]+"),
type = "Fay",
rho = 0.5,
mse = TRUE)
class(svy)
svy %>%
group_by(oy_flag) %>%
survey_count(NCHILD)
svy$variables
names(ipums)
ipums <-
identify_oy_ipums(ipums_data = ipums)
svy <- as_survey(ipums,
weight = PERWT,
repweights = matches("REPWTP[0-9]+"),
type = "Fay",
rho = 0.5,
mse = TRUE)
svy %>%
group_by(oy_flag) %>%
survey_count(NCHILD)
ipums$oy_flag = factor(ipums$oy_flag)
ipums$oy_flag
svy <- as_survey(ipums,
weight = PERWT,
repweights = matches("REPWTP[0-9]+"),
type = "Fay",
rho = 0.5,
mse = TRUE)
svy %>%
group_by(oy_flag) %>%
survey_count(NCHILD)
svy %>%
group_by(oy_flag) %>%
summarize(
mean = survey_mean(NCHILD)
)
svy %>%
group_by(oy_flag) %>%
summarize(
mean = survey_mean(NCHILD, vartype = c("se", "ci"))
)
ipums <-
ipums %>%
mutate(oy_flag = factor(oy_flag),
NCHILD = factor(NCHILD, ordered = TRUE))
ipums$NCHILD %>% levels()
ipums$NCHILD
ipums$NCHILD %>% class()
svy <- as_survey(ipums,
weight = PERWT,
repweights = matches("REPWTP[0-9]+"),
type = "Fay",
rho = 0.5,
mse = TRUE)
svy %>%
group_by(oy_flag) %>%
summarize(
mean = survey_mean(NCHILD, vartype = c("se", "ci"))
)
svy %>%
group_by(oy_flag, NCHILD) %>%
summarize(
mean = survey_mean(vartype = c("se", "ci"))
)
svy %>%
group_by(oy_flag, NCHILD) %>%
summarize(
mean = survey_mean(vartype = c("se", "ci")),
n = survey_count(vartype = c("se", "ci"))
)
svy %>%
group_by(oy_flag, NCHILD) %>%
summarize(
mean = survey_mean(vartype = c("se", "ci")),
n = survey_count(vartype = c("se", "ci")))
svy %>% survey_count(NCHILD)
svy %>% group_by(oy_flag) %>% survey_count(NCHLID)
svy %>% group_by(oy_flag) %>% survey_count(NCHILD)
svy %>%
group_by(oy_flag, NCHILD) %>%
summarize(
mean = survey_mean(vartype = c("se", "ci")),
n = survey_count(vartype = c("se", "ci")))
svy %>%
group_by(oy_flag, NCHILD) %>%
summarize(
mean = survey_mean(vartype = c("se", "ci"))
# n = survey_count(vartype = c("se", "ci"))
)
svy %>%
group_by(oy_flag, NCHILD) %>%
summarize(
mean = survey_mean(vartype = c("se", "ci"))
n = survey_count(NCHILD, vartype = c("se", "ci"))
)
svy %>%
group_by(oy_flag, NCHILD) %>%
summarize(
mean = survey_mean(vartype = c("se", "ci"))
n = survey_count(NCHILD, vartype = c("se", "ci")))
svy %>%
group_by(oy_flag, NCHILD) %>%
summarize(
mean = survey_mean(vartype = c("se", "ci")),
n = survey_count(NCHILD, vartype = c("se", "ci")))
svy %>%
group_by(oy_flag) %>%
survey_count(NCHILD, vartype = c("se", "ci"))
svy %>%
group_by(oy_flag) %>%
survey_count(NCHILD, vartype = c("se", "ci")) %>%
mutate(percent = n/sum(n))
ipums <- load_data$load_ipums_data()
