labs(
caption = "Cells representing less than 5% suppressed for clarity"
)
}
analysis_data$hh_num_children %>%
single_plot() +
labs(
y = "Average number of children"
) +
wrap_x_labels
analysis_data$hh_num_children %>% names()
analysis_data$hh_num_children
analysis_data$hh_num_children %>%
single_plot()
analysis_data$hh_num_children %>%
ggplot(aes(x = !!x_col, y = percent)) +
geom_col(color = 'black',
fill = color_contrast[2]) +
geom_errorbar(aes(ymax = percent_upp, ymin = !!error_bar_setting),
width = .2) +
theme_classic() +
geom_text(aes(label = scales::percent(percent, digits = 3)),
position = position_stack(vjust = .5)) +
# labs( y = "Average Number of Children") +
erase_x_legend +
theme(axis.text.x = element_text(face = 'bold')) +
labs(
caption = "Cells representing less than 5% suppressed for clarity"
)
analysis_data$hh_num_children
analysis_data$num_children
analysis_data$hh_num_children
ls()
rm(list = ls())
source('/projects/diegocampos/oy_census/R/create_population_estimates.R', echo=TRUE)
analysis_data$q2_household$hh_num_children
pums_survey %>% group_by(oy_hh_flag) %>% summarize(percent = survey_mean(NOC))
pums_survey %>% group_by(oy_flag, oy_hh_flag) %>% summarize(percent = survey_mean(NOC))
pums_survey %>% group_by(oy_flag, head_hh_flag) %>% summarize(percent = survey_mean(NOC))
analysis_data$q2_household$hh_children
analysis_data$q2_household$hh_children
analysis_data$q2_household$hh_number_of_people
pums_survey %>% group_by(oy_flag) %>% survey_count(x = NOC)
pums_survey$variables$NOC
pums_survey$variables$NOC %>% table()
pums_survey %>% group_by(oy_flag) %>% survey_count(x = NOC)
pums_survey %>% group_by(oy_flag) %>% survey_count(x = NP)
pums_survey %>% group_by(oy_flag) %>% survey_count(x = noc)
pums_survey$pweights
pums_survey$variables %>% names()
ls()
analysis_data$q2_household$hh_average_income
pums_survey %>% group_by(oy_hh_flag) %>% summarize(mean = survey_mean(PINCP))
pums_variables %>% filter(var_code == "PINCP") %>% distinct(var_code, var_label)
analysis_data$q2_household$hh_num_children
pums_survey %>% group_by(oy_flag, head_hh_flag) %>% survey_count()
pums_survey %>% group_by(oy_flag, head_hh_flag) %>% survey_mean(x = NOC)
?survey_mean()
pums_survey %>% group_by(oy_flag, head_hh_flag) %>% survey_mean(x = NOC, .svy = .)
pums_variables %>% filter(str_detect(var_label, 'children')) %>%
distinct(var_code, var_label)
identical(pums_df$NOC, pums_df$NRC)
pums_variables %>% filter(str_detect(var_label, 'children')) %>% distinct(var_code, var_label)
ls()
ls()
knitr::opts_chunk$set(echo = FALSE,
warning = F,
message = F,
fig.height = 4,
fig.width = 8)
source(
here::here(
'R',
'presentation_setup.R'
)
)
analysis_data <-
load_data$load_population_estimates()[['q2_household']]
# analysis_data <-
#   modify(.x = analysis_data,
#          .f = ~.x %>% mutate(oy_flag = figure_helpers$format_oy_variable(oy_flag)))
analysis_data <-
map(
.x = analysis_data,
.f = ~
.x %>%
modify_at(.x = .,
.at = 'oy_flag',
.f = figure_helpers$format_oy_variable) %>%
modify_at(.x = .,
.at = 'oy_hh_flag',
.f = figure_helpers$format_oy_hh_variable))
erase_y_axis =
theme(
axis.text.y = element_blank(),
axis.line.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank()
)
erase_x_legend =
theme(
axis.title.x = element_blank()
)
# Settings for the lower error bar
# other option is percent_low
error_bar_setting <-
rlang::sym('percent')
# color contrasts between Connected Youth and Opportunity Youth
# color_contrast <-
#   c(`Connected Youth` = "#800000", `Opportunity Youth` = '#D5802B')
color_contrast <-
c(`Connected Youth` = "#767676", `Opportunity Youth` = '#D5802B')
color_contrast_alt <- color_contrast
names(color_contrast_alt) <- NULL
color_palette <-
ggsci::pal_uchicago(palette = 'default')
color_palette_light <-
ggsci::pal_uchicago(palette = 'light')
basic_plot <- function(data, fill_label = NULL){
fill_col = names(data)[2] %>% rlang::sym()
x_col =    names(data)[str_detect(names(data), "oy")] %>% rlang::sym()
data %>%
filter(!str_detect(!!x_col, '(Everyone)|(Eveyrone)')) %>%
ggplot(aes(x = !!x_col, y = percent, fill = !!fill_col)) +
geom_col(color = 'black') +
geom_text(aes(label = if_else(percent > .05,
scales::percent(percent, accuracy = .1),
""),
group = !!fill_col),
position = position_stack(vjust = .5)) +
theme_classic() +
scale_y_continuous(labels = scales::percent) +
erase_y_axis +
erase_x_legend +
theme(axis.text.x = element_text(face = 'bold')) +
labs(
caption = "Cells representing less than 5% suppressed for clarity") +
ggsci::scale_fill_uchicago()
}
single_plot <- function(data, x_col = NULL){
if(is.null(x_col)){
x_col =    names(data)[str_detect(names(data), "oy")] %>% rlang::sym()
}else{
x_col = rlang::sym(x_col)
}
data %>%
ggplot(aes(x = !!x_col, y = percent)) +
geom_col(color = 'black',
fill = color_contrast[2]) +
geom_errorbar(aes(ymax = percent_upp, ymin = !!error_bar_setting),
width = .2) +
theme_classic() +
geom_text(aes(label = scales::percent(percent, digits = 3)),
position = position_stack(vjust = .5)) +
# labs( y = "Average Number of Children") +
erase_x_legend +
theme(axis.text.x = element_text(face = 'bold')) +
labs(
caption = "Cells representing less than 5% suppressed for clarity"
)
}
wrap_x_labels =
scale_x_discrete(labels = function(x) str_wrap(x,10))
analysis_data$head_of_household_alt %>%
single_plot(x_col = 'oy_hh_flag') +
wrap_x_labels +
scale_y_continuous(labels = scales::percent) +
labs(caption = "",
y = "Percent") +
erase_y_axis
analysis_data$hh_children %>%
basic_plot() +
labs(fill = "Parental Status") +
wrap_x_labels +
scale_fill_manual(values = color_contrast_alt)
analysis_data$hh_average_income %>%
ggplot(aes(x = oy_hh_flag, y = percent)) +
geom_col(color = 'black',
fill = color_contrast[2]) +
geom_errorbar(aes(ymax = percent_upp, ymin = !!error_bar_setting),
width = .2) +
theme_classic() +
geom_text(aes(label = scales::dollar(percent)),
position = position_stack(vjust = .5),
size = 3.7) +
# labs( y = "Average Number of Children") +
erase_x_legend +
theme(axis.text.x = element_text(face = 'bold')) +
labs(
y = "Average Total Income",
caption = "Cells representing less than 5% suppressed for clarity"
) +
wrap_x_labels +
scale_y_continuous(labels = scales::dollar)
analysis_data$hh_food_stamps %>%
basic_plot() +
labs(fill = "Food Stamp Recipient") +
wrap_x_labels +
scale_fill_manual(values = color_contrast_alt)
analysis_data$hh_type %>%
basic_plot() +
labs(fill = "Type of Household") +
scale_fill_manual(values = c(color_contrast[2], color_palette_light(8)))
analysis_data$hh_workers_in_fam %>%
basic_plot() +
labs(fill = "Number of workers in Family") +
wrap_x_labels +
scale_fill_manual(values = c(color_contrast_alt[2], color_palette_light(4)))
analysis_data$hh_married %>%
basic_plot() +
labs(fill = "Marital Status") +
wrap_x_labels  +
scale_fill_manual(values = c(color_contrast_alt[2], rev(color_palette(5))))
analysis_data$hh_partnered %>%
basic_plot() +
labs(fill = "Partner Status") +
wrap_x_labels
analysis_data$same_sex_married %>%
basic_plot() +
labs(fill = "Same-Sex Married Household")
analysis_data$multigen %>%
basic_plot() +
labs(fill = "Multigenerational Family")
analysis_data$hh_migration %>%
basic_plot() +
labs(fill = "Migration Status") +
wrap_x_labels +
scale_fill_manual(values = c(color_palette(3), color_contrast_alt[2]))
analysis_data$hh_transportation_mode %>%
mutate(JWTR_label = str_remove(JWTR_label, "\\(.*\\)")) %>%
basic_plot() +
labs(fill = "Mode of Transport") +
wrap_x_labels +
scale_fill_manual(values = c(color_palette(9), color_palette_light(9)))
analysis_data$hh_commute_bracket %>%
basic_plot() +
labs(fill = "Commute Time (minutes)") +
wrap_x_labels +
scale_fill_manual(values = c(color_contrast_alt[2], color_palette(9), color_palette_light(1)))
analysis_data$hh_num_children
analysis_data$hh_num_children %>%
single_plot()
analysis_data$hh_num_children %>%
basic_plot()
analysis_data$hh_num_children %>%
single_plot()
analysis_data$hh_num_children %>%
ggplot(aes(x = oy_hh_flag, y = percent)) +
geom_col(color = 'black',
fill = color_contrast[2]) +
geom_errorbar(aes(ymax = percent_upp, ymin = !!error_bar_setting),
width = .2) +
theme_classic() +
geom_text(aes(label = scales::percent(percent, digits = 3)),
position = position_stack(vjust = .5)) +
# labs( y = "Average Number of Children") +
erase_x_legend +
theme(axis.text.x = element_text(face = 'bold')) +
labs(
caption = "Cells representing less than 5% suppressed for clarity"
)
analysis_data$hh_num_children %>%
ggplot(aes(x = oy_hh_flag, y = percent)) +
geom_col(color = 'black',
fill = color_contrast[2]) +
geom_errorbar(aes(ymax = percent_upp, ymin = !!error_bar_setting),
width = .2) +
theme_classic() +
geom_text(aes(label = format(percent, digits = 3)),
position = position_stack(vjust = .5)) +
# labs( y = "Average Number of Children") +
erase_x_legend +
theme(axis.text.x = element_text(face = 'bold')) +
labs(
caption = "Cells representing less than 5% suppressed for clarity"
)
analysis_data$hh_num_children %>%
ggplot(aes(x = oy_hh_flag, y = percent)) +
geom_col(color = 'black',
fill = color_contrast[2]) +
geom_errorbar(aes(ymax = percent_upp, ymin = !!error_bar_setting),
width = .2) +
theme_classic() +
geom_text(aes(label = format(percent, digits = 3)),
position = position_stack(vjust = .5)) +
# labs( y = "Average Number of Children") +
erase_x_legend +
theme(axis.text.x = element_text(face = 'bold')) +
labs(
caption = "Cells representing less than 5% suppressed for clarity"
) +
wrap_x_labels
analysis_data$hh_num_children %>%
ggplot(aes(x = oy_hh_flag, y = percent)) +
geom_col(color = 'black',
fill = color_contrast[2]) +
geom_errorbar(aes(ymax = percent_upp, ymin = !!error_bar_setting),
width = .2) +
theme_classic() +
geom_text(aes(label = round(percent, digits = 2)),
position = position_stack(vjust = .5)) +
# labs( y = "Average Number of Children") +
erase_x_legend +
theme(axis.text.x = element_text(face = 'bold')) +
labs(
caption = "Cells representing less than 5% suppressed for clarity"
) +
wrap_x_labels
analysis_data$hh_num_children %>%
ggplot(aes(x = oy_hh_flag, y = percent)) +
geom_col(color = 'black',
fill = color_contrast[2]) +
geom_errorbar(aes(ymax = percent_upp, ymin = !!error_bar_setting),
width = .2) +
theme_classic() +
geom_text(aes(label = round(percent, digits = 2)),
position = position_stack(vjust = .5)) +
# labs( y = "Average Number of Children") +
erase_x_legend +
theme(axis.text.x = element_text(face = 'bold')) +
labs(
caption = "Cells representing less than 5% suppressed for clarity"
y = 'Average number of children'
y = 'Average number of children') +
y = 'Average number of children') +
analysis_data$hh_num_children %>%
ggplot(aes(x = oy_hh_flag, y = percent)) +
geom_col(color = 'black',
fill = color_contrast[2]) +
geom_errorbar(aes(ymax = percent_upp, ymin = !!error_bar_setting),
width = .2) +
theme_classic() +
geom_text(aes(label = round(percent, digits = 2)),
position = position_stack(vjust = .5)) +
# labs( y = "Average Number of Children") +
erase_x_legend +
theme(axis.text.x = element_text(face = 'bold')) +
labs(caption = "Cells representing less than 5% suppressed for clarity",
y = 'Average number of children') +
wrap_x_labels
analysis_data$hh_average_income %>%
fitler(!(str_detect(oy_hh_flag, "Eve"))) %>%
ggplot(aes(x = oy_hh_flag, y = percent)) +
geom_col(color = 'black',
fill = color_contrast[2]) +
geom_errorbar(aes(ymax = percent_upp, ymin = !!error_bar_setting),
width = .2) +
theme_classic() +
geom_text(aes(label = scales::dollar(percent)),
position = position_stack(vjust = .5),
size = 3.7) +
# labs( y = "Average Number of Children") +
erase_x_legend +
theme(axis.text.x = element_text(face = 'bold')) +
labs(
y = "Person's total income",
caption = "Cells representing less than 5% suppressed for clarity"
) +
wrap_x_labels +
scale_y_continuous(labels = scales::dollar)
analysis_data$hh_average_income %>%
filter(!(str_detect(oy_hh_flag, "Eve"))) %>%
ggplot(aes(x = oy_hh_flag, y = percent)) +
geom_col(color = 'black',
fill = color_contrast[2]) +
geom_errorbar(aes(ymax = percent_upp, ymin = !!error_bar_setting),
width = .2) +
theme_classic() +
geom_text(aes(label = scales::dollar(percent)),
position = position_stack(vjust = .5),
size = 3.7) +
# labs( y = "Average Number of Children") +
erase_x_legend +
theme(axis.text.x = element_text(face = 'bold')) +
labs(
y = "Person's total income",
caption = "Cells representing less than 5% suppressed for clarity"
) +
wrap_x_labels +
scale_y_continuous(labels = scales::dollar)
analysis_data$hh_num_children %>%
filter(str_detect(oy_hh_flag, 'Eve')) %>%
ggplot(aes(x = oy_hh_flag, y = percent)) +
geom_col(color = 'black',
fill = color_contrast[2]) +
geom_errorbar(aes(ymax = percent_upp, ymin = !!error_bar_setting),
width = .2) +
theme_classic() +
geom_text(aes(label = round(percent, digits = 2)),
position = position_stack(vjust = .5)) +
# labs( y = "Average Number of Children") +
erase_x_legend +
theme(axis.text.x = element_text(face = 'bold')) +
labs(caption = "Cells representing less than 5% suppressed for clarity",
y = 'Average number of children') +
wrap_x_labels
analysis_data$hh_num_children %>%
filter(!str_detect(oy_hh_flag, 'Eve')) %>%
ggplot(aes(x = oy_hh_flag, y = percent)) +
geom_col(color = 'black',
fill = color_contrast[2]) +
geom_errorbar(aes(ymax = percent_upp, ymin = !!error_bar_setting),
width = .2) +
theme_classic() +
geom_text(aes(label = round(percent, digits = 2)),
position = position_stack(vjust = .5)) +
# labs( y = "Average Number of Children") +
erase_x_legend +
theme(axis.text.x = element_text(face = 'bold')) +
labs(caption = "Cells representing less than 5% suppressed for clarity",
y = 'Average number of children') +
wrap_x_labels
analysis_data$hh_same_sex_married %>%
basic_plot() +
labs(fill = "Same-Sex Married Household")
analysis_data$hh_same_sex_married %>%
basic_plot() +
labs(fill = "Same-Sex Married Household") +
wrap_x_labels
analysis_data$hh_same_sex_married %>%
basic_plot() +
labs(fill = "Same-Sex Married Household") +
wrap_x_labels
analysis_data$hh_multigen %>%
basic_plot() +
labs(fill = "Multigenerational Family")
analysis_data$hh_multigen %>%
basic_plot() +
labs(fill = "Multigenerational Family") +
wrap_x_labels
analysis_data$hh_number_of_people %>%
basic_plot()
analysis_data$hh_number_of_people %>%
single_plot()
ls()
pums_df$RELP_label
pums_df$RELP_label %>% unique()
pums_df %>% View()
pums_df %>% dim()
pums_df$SERIALNO %>% n_distinct()
pums_df$RT
pums_df %>% dim()
pums_df$SERIALNO %>% n_distinct()
pums_df %>% arrange(SERIALNO) %>% View()
pums_df %>% count(SERIAL_NO)
pums_df %>% count(SERIALNO)
pums_df %>% count(SERIALNO, sort = TRUE)
pums_df %>% filter(SERIALNO == 2018HU0012782)
pums_df %>% filter(SERIALNO == "2018HU0012782")
pums_df %>% filter(SERIALNO == "2018HU0012782") %>% View('single')
pums_df %>% filter(oy_flag == "opp_youth")
pums_df %>% filter(oy_flag == "opp_youth") %>% count(SERIALNO)
pums_df %>% filter(oy_flag == "opp_youth") %>% count(SERIALNO, sort = TRUE)
pums_df %>% filter(SERIALNO == "2018HU0792860")
pums_df %>% filter(SERIALNO == "2018HU0792860") %>% View()
pums_df$NWRE_label
pums_df$NWRE_label %>% unique()
pums_variables %>% filter(str_detect(var_code, 'NW'))
pums_variables %>% filter(str_detect(var_code, 'NW')) %>% distinct(var_code, var_label)
ls()
rm(list = ls())
ls()
load_data <-
list(
download_pums_data = function(){
# api_key =
#   get_api_key()
tidycensus::get_pums(
# key = api_key,
variables = get_pums_variables(),
state = 'IL',
recode = TRUE,
year = 2018,
survey = 'acs1',
rep_weights = 'person'
)
},
load_pums_data = function(){
file_path =
here::here('raw_data',
'il_pums_data.csv')
file =
readr::read_csv(file_path)
},
load_PUMA_crosswalk = function(){
file_path =
here::here(
'raw_data',
'MSA2013_PUMA2010_crosswalk.csv')
file =
readr::read_csv(file_path)
},
load_clean_pums = function(){
file_path =
here::here(
'clean_data',
'il_pums_data_clean.csv'
)
file =
readr::read_csv(file_path)
},
load_population_estimates = function(){
file_path =
here::here(
'analysis_data',
'oy_population_estimates.RDS'
)
file =
readr::read_rds(file_path)
}
)
library(tidyverse)
