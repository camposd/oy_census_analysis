wrap_x_labels +
geom_errorbar(aes(ymin = percent, ymax = percent_upp),
position = position_dodge(width = .9),
width = .3) +
scale_fill_manual(values = c(color_palette(9), color_palette_light(9)))
# mode of transportation
# person level
analysis_data$q2_household$commute_bracket %>%
basic_plot_dodge(erase = F) +
labs(fill = "Commute Time (minutes)",
caption = figure_helpers$citations['PUMS'],
y = "Percent") +
wrap_x_labels +
geom_errorbar(aes(ymin = percent, ymax = percent_upp),
position = position_dodge(width = .9),
width = .3) +
scale_fill_viridis(discrete = TRUE)
analysis_data$household_type_percent %>%
# mutate(oy_household = figure_helpers$format_oy_household(oy_household)) %>%
single_plot() +
geom_text(aes(label = if_else(percent > .05,
scales::percent(percent, accuracy = .1),
"")),
vjust = 1.5)+
scale_y_continuous(labels = scales::percent) +
labs(y = "Percent",
caption = paste0(figure_helpers$citations['PUMS'],
figure_helpers$fig_help$newline,
figure_helpers$suppress))
analysis_data$household_type_percent %>%
# mutate(oy_household = figure_helpers$format_oy_household(oy_household)) %>%
single_plot() +
geom_text(aes(label = if_else(percent > .05,
scales::percent(percent, accuracy = .1),
"")),
vjust = 1.5)+
scale_y_continuous(labels = scales::percent) +
labs(y = "Percent",
caption = paste0(figure_helpers$citations['PUMS'],
figure_helpers$fig_help$newline,
figure_helpers$suppress)) +
scale_x_discrete(labels = ss)
ss
ss
ss
ss <-
analysis_data$household_type_count %>%
select(oy_household, n) %>%
mutate(label = paste0(oy_household, "\n", "N = ", n)) %>%
select(oy_household, label) %>%
spread(oy_household, label)
analysis_data$household_type_percent %>%
# mutate(oy_household = figure_helpers$format_oy_household(oy_household)) %>%
single_plot() +
geom_text(aes(label = if_else(percent > .05,
scales::percent(percent, accuracy = .1),
"")),
vjust = 1.5)+
scale_y_continuous(labels = scales::percent) +
labs(y = "Percent",
caption = paste0(figure_helpers$citations['PUMS'],
figure_helpers$fig_help$newline,
figure_helpers$suppress)) +
scale_x_discrete(labels = ss)
ss <-
analysis_data$household_type_count %>%
select(oy_household, n) %>%
mutate(label = paste0(oy_household, "\n", "N = ", n %>% format(big.mark = ','))) %>%
select(oy_household, label) %>%
spread(oy_household, label)
analysis_data$household_type_percent %>%
# mutate(oy_household = figure_helpers$format_oy_household(oy_household)) %>%
single_plot() +
geom_text(aes(label = if_else(percent > .05,
scales::percent(percent, accuracy = .1),
"")),
vjust = 1.5)+
scale_y_continuous(labels = scales::percent) +
labs(y = "Percent",
caption = paste0(figure_helpers$citations['PUMS'],
figure_helpers$fig_help$newline,
figure_helpers$suppress)) +
scale_x_discrete(labels = ss)
analysis_data$q2_household$commute_bracket
analysis_data$q2_household$commute_bracket$commute_bracket %>% levels()
knitr::opts_chunk$set(echo = FALSE,
warning = F,
message = F,
fig.height = 4,
fig.width = 8)
source(
here::here(
'R',
'presentation_setup.R'
)
)
analysis_data <-
load_data$load_population_estimates()
ipums_data <-
load_data$load_IPUMS_population_estimates()
analysis_data$q1_demographics <-
map(analysis_data$q1_demographics,
.f =  ~
.x %>%
modify_at(.x = .,
.at = 'oy_flag',
.f = figure_helpers$format_oy_variable))
analysis_data$q2_household <-
map(analysis_data$q2_household,
.f = ~
.x %>%
modify_at(.x = .,
.at = 'oy_flag',
.f = figure_helpers$format_oy_variable))
analysis_data[c("household_income_estimates", "household_type_percent", "household_type_count")] %<>%
map(.f = ~
.x %>%
mutate(oy_household = figure_helpers$format_oy_household(oy_household)))
ipums_data %<>%
map(.f = ~
.x %>%
mutate(oy_flag = figure_helpers$format_oy_variable(oy_flag)))
# analysis_data <-
#   analysis_data %>% map(.f = ~ .x %>% filter(across(everything(), ~ !(str_detect(.x, "Every")))))
erase_y_axis =
theme(
axis.text.y = element_blank(),
axis.line.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank()
)
erase_x_legend =
theme(
axis.title.x = element_blank()
)
# Settings for the lower error bar
# other option is percent_low
error_bar_setting <-
rlang::sym('percent')
# color contrasts between Connected Youth and Opportunity Youth
# color_contrast <-
#   c(`Connected Youth` = "#800000", `Opportunity Youth` = '#D5802B')
color_contrast <-
c(`Connected Youth` = "#767676", `Opportunity Youth` = '#D5802B')
color_contrast_alt <- color_contrast
names(color_contrast_alt) <- NULL
color_contrast_hh <- rep(color_contrast, 2)
names(color_contrast_hh) <- c("Connected Youth - HH", "Connected Youth - Non-HH", "Opportunity Youth - HH", "Opportunity Youth - Non-HH" )
color_palette <-
ggsci::pal_uchicago(palette = 'default')
color_palette_light <-
ggsci::pal_uchicago(palette = 'light')
basic_plot <- function(data, fill_label = NULL){
fill_col = names(data)[2] %>% rlang::sym()
x_col =    names(data)[str_detect(names(data), "oy")] %>% rlang::sym()
data %>%
filter(!str_detect(!!x_col, '(Everyone)|(Eveyrone)')) %>%
ggplot(aes(x = !!x_col, y = percent, fill = !!fill_col)) +
geom_col(color = 'black') +
geom_text(aes(label = if_else(percent > .05,
scales::percent(percent, accuracy = .1),
""),
group = !!fill_col),
position = position_stack(vjust = .5)) +
theme_classic() +
scale_y_continuous(labels = scales::percent) +
erase_y_axis +
erase_x_legend +
theme(axis.text.x = element_text(face = 'bold')) +
labs(
caption = "Cells representing less than 5% suppressed for clarity") +
ggsci::scale_fill_uchicago()
}
single_plot <- function(data, x_col = NULL){
if(is.null(x_col)){
x_col =    names(data)[str_detect(names(data), "oy")] %>% rlang::sym()
}else{
x_col = rlang::sym(x_col)
}
data %>%
ggplot(aes(x = !!x_col, y = percent)) +
geom_col(color = 'black',
fill = color_contrast[2],
width = .5) +
geom_errorbar(aes(ymax = percent_upp, ymin = !!error_bar_setting),
width = .2) +
theme_classic() +
# geom_text(aes(label = if_else(percent > .05,
#                               scales::percent(percent, accuracy = .1),
#                               ""))) +
erase_x_legend +
theme(axis.text.x = element_text(face = 'bold'))
}
wrap_x_labels =
scale_x_discrete(labels = function(x) str_wrap(x,10))
basic_plot_dodge <- function(data, fill_label = NULL, erase = TRUE){
fill_col = names(data)[2] %>% rlang::sym()
x_col =    names(data)[str_detect(names(data), "oy")] %>% rlang::sym()
out <-
data %>%
filter(!str_detect(!!x_col, '(Everyone)|(Eveyrone)')) %>%
ggplot(aes(x = !!x_col, y = percent, fill = !!fill_col, group = !!fill_col)) +
geom_col(color = 'black',
position = 'dodge') +
# geom_text(aes(label = scales::percent(percent, accuracy = .1),
#               group = !!fill_col),
#           position = position_dodge(width = .87),
#           vjust = 1.3) +
# geom_errorbar(aes(ymin = percent, ymax = percent_upp,
#                   group = !!fill_col),
#               width = .5,
#               position = position_dodge(1))+
theme_classic() +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(face = 'bold')) +
erase_x_legend
if(erase == TRUE){
out <-  out + erase_y_axis
}else{
out <-  out
}
# erase_y_axis +
# erase_x_legend +
# theme(axis.text.x = element_text(face = 'bold'))
# scale_fill_manual(values = color_contrast_hh)
return(out)
}
ss <- analysis_data$q1_demographics$total_oy_population %>%
select(oy_flag, n) %>%
spread(oy_flag, n) %>%
unlist()
analysis_data$q1_demographics$total_oy_population %>%
single_plot() +
scale_x_discrete(labels = function(x) paste0(x, figure_helpers$fig_help$newline,
figure_helpers$fig_help$N,
ss %>% format(big.mark = ','))) +
labs(y = "Percent",
caption = paste0(figure_helpers$citations['PUMS'],
figure_helpers$fig_help$newline)) +
scale_y_continuous(labels = scales::percent, limits = c(0,1))
ss <- analysis_data$q2_household$head_of_household_alt %>% group_by(oy_hh_flag) %>% summarize(n = sum(n)) %>% spread(oy_hh_flag, n) %>% unlist()
analysis_data$q2_household$head_of_household_alt %>%
filter(!str_detect(oy_hh_flag, "Eve")) %>%
single_plot(x_col = 'oy_hh_flag') +
wrap_x_labels +
scale_y_continuous(labels = scales::percent, limits = c(0,1)) +
labs(caption = figure_helpers$citations['PUMS'],
y = "Percent") +
scale_x_discrete(labels = function(x) paste0(x,
figure_helpers$fig_help$newline,
figure_helpers$fig_help$N,
(ss[-c(3:4)]) %>% format(big.mark = ',')))
# children are now individual level so I can say, does a given individual have at least one child?
ipums_data$at_least_one_child %>%
basic_plot_dodge(erase = F) +
geom_errorbar(aes(ymin = !!error_bar_setting, ymax = percent_upp,
group = at_least_one_child),
width = .2,
position = position_dodge(.9))+
labs(fill = "Parental Status") +
# geom_text(
#   aes(label = scales::percent(percent),
#       group = at_least_one_child),
#   position = position_dodge(width = .9),
#   vjust = 1.2,
#   size = 3.8
# ) +
wrap_x_labels +
scale_fill_manual(values = color_contrast_alt) +
labs(
caption = figure_helpers$citations['IPUMS'],
y = "Percent"
) +
geom_text(
aes(label =
if_else(percent > .05,
scales::percent(percent, accuracy = .1),
""),
group = at_least_one_child),
position = position_dodge(width = .9),
size = 4,
color = 'black',
vjust = 1.5
)
# analysis_data$hh_num_children %>%
#   filter(!str_detect(oy_hh_flag, 'Eve')) %>%
#
#   ggplot(aes(x = oy_hh_flag, y = percent)) +
#   geom_col(color = 'black',
#            fill = color_contrast[2]) +
#   geom_errorbar(aes(ymax = percent_upp, ymin = !!error_bar_setting),
#                 width = .2) +
#   theme_classic() +
#   geom_text(aes(label = round(percent, digits = 2)),
#             position = position_stack(vjust = .5)) +
#   # labs( y = "Average Number of Children") +
#   erase_x_legend +
#   theme(axis.text.x = element_text(face = 'bold')) +
#   labs(caption = "Cells representing less than 5% suppressed for clarity",
#        y = 'Average number of children') +
#   wrap_x_labels
ipums_data$percent_children %>%
filter(oy_flag != "everyone_else") %>%
basic_plot_dodge(erase = FALSE) +
geom_errorbar(aes(ymin = percent, ymax = percent_upp,
group = NCHILD),
width = .5,
position = position_dodge(.9)) +
# geom_text(aes(label = scales::percent(percent, accuracy = .1),
#               group = NCHILD),
#           position = position_dodge(width = .9)) +
labs(
caption = paste0(figure_helpers$citations['IPUMS'],
figure_helpers$fig_help$newline,
figure_helpers$suppress),
fill = "Number of Children",
y = "Percent"
) +
geom_text(
aes(label =
if_else(percent > .05,
scales::percent(percent, accuracy = .1),
""),
group = NCHILD),
position = position_dodge(width = .9),
size = 4,
color = 'white',
vjust = 1.4
) +
ggsci::scale_fill_uchicago(palette = 'default')
ss <-
analysis_data$household_type_count %>%
select(oy_household, n) %>%
mutate(label = paste0(oy_household, "\n", "N = ", n %>% format(big.mark = ','))) %>%
select(oy_household, label) %>%
spread(oy_household, label)
analysis_data$household_type_percent %>%
# mutate(oy_household = figure_helpers$format_oy_household(oy_household)) %>%
single_plot() +
geom_text(aes(label = if_else(percent > .05,
scales::percent(percent, accuracy = .1),
"")),
vjust = 1.5)+
scale_y_continuous(labels = scales::percent) +
labs(y = "Percent",
caption = paste0(figure_helpers$citations['PUMS'],
figure_helpers$fig_help$newline,
figure_helpers$suppress)) +
scale_x_discrete(labels = ss)
analysis_data$household_income_estimates %>%
ggplot(aes(x = oy_household, y = percent)) +
geom_col(color = 'black',
fill = color_contrast[2]) +
geom_errorbar(aes(ymax = percent_upp, ymin = !!error_bar_setting),
width = .2) +
theme_classic() +
geom_text(aes(label = scales::dollar(percent)),
position = position_stack(vjust = .5)) +
# labs( y = "Average Number of Children") +
erase_x_legend +
theme(axis.text.x = element_text(face = 'bold')) +
labs(
caption = figure_helpers$citations['PUMS'],
y = "Household Income") +
scale_y_continuous(labels = scales::dollar)
analysis_data$q2_household$average_income %>%
filter(!(str_detect(oy_flag, "Eve"))) %>%
ggplot(aes(x = oy_flag, y = percent)) +
geom_col(color = 'black',
fill = color_contrast[2]) +
geom_errorbar(aes(ymax = percent_upp, ymin = !!error_bar_setting),
width = .2) +
theme_classic() +
geom_text(aes(label = scales::dollar(percent)),
position = position_stack(vjust = .5),
size = 3.7) +
# labs( y = "Average Number of Children") +
erase_x_legend +
theme(axis.text.x = element_text(face = 'bold')) +
labs(
y = "Total Personal Income",
caption = figure_helpers$citations['PUMS']
) +
wrap_x_labels +
scale_y_continuous(labels = scales::dollar, limits = c(0,15000))
# person level
analysis_data$q2_household$married %>%
basic_plot_dodge(erase = F) +
labs(fill = "Marital Status",
caption = figure_helpers$citations['PUMS'],
y = "Percent") +
wrap_x_labels  +
scale_fill_manual(values = c(color_contrast_alt[2], rev(color_palette(5)))) +
geom_errorbar(aes(ymin = percent, ymax = percent_upp,
group = MAR_label),
width = .5,
position = position_dodge(.9)) +
geom_text(
aes(label =
if_else(percent > .05,
scales::percent(percent, accuracy = .1),
""),
group = MAR_label),
position = position_dodge(width = .9),
size = 4,
color = 'black',
vjust = 1.4
)
# person level
analysis_data$q2_household$partnered %>%
basic_plot_dodge(erase = F) +
geom_errorbar(aes(ymin = percent, ymax = percent_upp,
group = PARTNER_label),
width = .5,
position = position_dodge(.9)) +
labs(fill = "Partner Status",
caption = figure_helpers$citations['PUMS'],
y = "Percent") +
wrap_x_labels  +
ggsci::scale_fill_uchicago() +
geom_text(
aes(label =
if_else(percent > .05,
scales::percent(percent, accuracy = .1),
""),
group = PARTNER_label),
position = position_dodge(width = .9),
size = 3,
color = 'black',
vjust = 1.4
)
# person level
analysis_data$q2_household$migration %>%
basic_plot_dodge(erase = F) +
labs(fill = "Migration Status",
caption = paste0(figure_helpers$citations['PUMS'],
figure_helpers$fig_help$newline,
figure_helpers$suppress),
y = "Percent") +
wrap_x_labels +
scale_fill_manual(values = c(color_palette(3), color_contrast_alt[2])) +
geom_errorbar(aes(ymin = percent, ymax = percent_upp),
position = position_dodge(width = .9),
width = .3) +
geom_text(
aes(label =
if_else(percent > .05,
scales::percent(percent, accuracy = .1),
""),
group = MIG_label),
position = position_dodge(width = .9),
size = 4,
color = 'white',
vjust = 1.4
)
# Person level
analysis_data$q2_household$transportation_mode %>%
mutate(JWTR_label = str_remove(JWTR_label, "\\(.*\\)")) %>%
basic_plot_dodge(erase = F) +
labs(fill = "Mode of Transport",
caption = figure_helpers$citations['PUMS'],
y = "Percent") +
wrap_x_labels +
geom_errorbar(aes(ymin = percent, ymax = percent_upp),
position = position_dodge(width = .9),
width = .3) +
scale_fill_manual(values = c(color_palette(9), color_palette_light(9)))
# mode of transportation
# person level
analysis_data$q2_household$commute_bracket %>%
mutate()
basic_plot_dodge(erase = F) +
labs(fill = "Commute Time (minutes)",
caption = figure_helpers$citations['PUMS'],
y = "Percent") +
wrap_x_labels +
geom_errorbar(aes(ymin = percent, ymax = percent_upp),
position = position_dodge(width = .9),
width = .3) +
scale_fill_viridis(discrete = TRUE)
forcats::fct_relevel
?forcats::fct_relevel
analysis_data$q2_household$commute_bracket$commute_bracket
# mode of transportation
# person level
analysis_data$q2_household$commute_bracket %>%
# mode of transportation
# person level
analysis_data$q2_household$commute_bracket %>%
mutate(commute_bracket = forcats::fct_relevel(commute_bracket, "100 +", after = "90-99")) %>%
basic_plot_dodge(erase = F) +
labs(fill = "Commute Time (minutes)",
caption = figure_helpers$citations['PUMS'],
y = "Percent") +
wrap_x_labels +
geom_errorbar(aes(ymin = percent, ymax = percent_upp),
position = position_dodge(width = .9),
width = .3) +
scale_fill_viridis(discrete = TRUE)
# mode of transportation
# person level
analysis_data$q2_household$commute_bracket %>%
mutate(commute_bracket = forcats::fct_relevel(commute_bracket, "100 +", after = 11)) %>%
basic_plot_dodge(erase = F) +
labs(fill = "Commute Time (minutes)",
caption = figure_helpers$citations['PUMS'],
y = "Percent") +
wrap_x_labels +
geom_errorbar(aes(ymin = percent, ymax = percent_upp),
position = position_dodge(width = .9),
width = .3) +
scale_fill_viridis(discrete = TRUE)
